{"version":3,"sources":["src\\components\\Cell.js","src\\components\\JottoResult.js","src\\components\\JottoWord.js","src\\components\\UIKeyboard.js","src\\components\\HowToPlayPopup.js","src\\views\\MainView.js","src\\App.js","index.js"],"names":[],"mappingsprEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxreA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"generated.js","sourceRoot":"","sourcesContent":["var\r\n  kind = require(\"enyo/kind\"),\r\n  Control = require(\"enyo/Control\");\r\n\r\nvar Unicode = {\r\n  nbsp: \"\\u00A0\",\r\n  mdash: \"\\u2014\",\r\n  leftwardArrow: \"\\u2190\",\r\n  upwardArrow: \"\\u2191\",\r\n  rightwardArrow: \"\\u2192\",\r\n  downwardArrow: \"\\u2193\"\r\n};\r\n\r\nmodule.exports = kind({\r\n allowHtml: true,\r\n //classes: \"letter\",\r\n name: \"Cell\",\r\n kind: Control,\r\n published: {\r\n    status: \"\",\r\n    text: \"\"\r\n },\r\n components: [\r\n    {\r\n      tag: \"span\",\r\n      content: Unicode.nbsp,\r\n      name: \"cell\"\r\n    }\r\n ],\r\n style: \"border-radius: 50%; color: black; display: inline-block; font-family: monospace; font-size: 30px; line-height: 100%; text-align: center; text-transform: uppercase; width: 32px; height: 32px;\",\r\n create: function() {\r\n    this.inherited(arguments);\r\n    this.textChanged();\r\n    this.statusChanged();\r\n },\r\n textChanged: function(oldValue) {\r\n    // start by forcing uppercase and trimming white space\r\n    this.text = this.text.toUpperCase();\r\n    this.text = this.text.replace(/^\\s+|\\s+$/g, \"\");\r\n    this.text = this.text.replace(/\\s+/g, Unicode.nbsp);\r\n    this.$.cell.setContent(this.text || Unicode.nbsp);\r\n },\r\n statusChanged: function(oldValue) {\r\n   var color = \"#ff0000\";\r\n   var fontStyle = \"normal\";\r\n   var fontWeight = \"normal\";\r\n   var mappedStatus = this.mapStatus(this.status);\r\n   switch (mappedStatus) {\r\n     case \"present\":\r\n       color = \"#ffff00\";\r\n       fontStyle = \"oblique\";\r\n       break;\r\n     case \"perfect\":\r\n       color = \"#00ff00\";\r\n       fontWeight = \"bold\";\r\n       break;\r\n     case \"absent\":\r\n      color = \"#ff0000\";\r\n      break;\r\n     default:\r\n      color = \"orange\";\r\n   }\r\n   //this.addRemoveClass(\"letter\", this.encrypted);\r\n   this.applyStyle(\"background-color\", color);\r\n   this.applyStyle(\"font-style\", fontStyle);\r\n   this.applyStyle(\"font-weight\", fontWeight);\r\n },\r\n mapStatus: function(status) {\r\n    var retVal = status;\r\n    switch (status) {\r\n      case \"o\":\r\n        retVal = \"present\";\r\n        break;\r\n      case \"+\":\r\n      case \"*\":\r\n        retVal = \"perfect\";\r\n        break;\r\n      case \"-\":\r\n      case \".\":\r\n        retVal = \"absent\";\r\n        break;\r\n    }\r\n    return retVal;    \r\n  }\r\n});","var\r\n  kind = require(\"enyo/kind\");\r\n\r\nvar\r\n  Repeater = require(\"enyo/Repeater\"),\r\n  Cell = require(\"./Cell\"),\r\n  Control = require(\"enyo/Control\");\r\n\r\nmodule.exports = kind({\r\n  name: \"JottoResult\",\r\n  kind: Control,\r\n  components: [\r\n    { \r\n      name: \"cells\", \r\n      kind: Repeater,\r\n      onSetupItem: \"setupCell\",\r\n      components: [ \r\n        { \r\n          kind: Cell\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  published: {\r\n    guess: \"\",\r\n    result: \"\"\r\n  },\r\n  create: function() {\r\n    this.inherited(arguments);\r\n    this.data = [];\r\n  },\r\n  rendered: function() {\r\n    this.statusChanged();\r\n  },\r\n  destroy: function() {\r\n    this.inherited(arguments);\r\n  },\r\n  statusChanged: function(oldValue) {\r\n    this.data = [];\r\n    var guess = this.guess;\r\n    var result = this.result;\r\n    var length = result.length;\r\n    var i;\r\n    for (i = 0; i < length; ++i) {\r\n      var letter = guess.charAt(i);\r\n      var statusChar = result.charAt(i);\r\n      this.data.push({\"text\": letter, \"status\": statusChar});\r\n    }\r\n    this.$.cells.setCount(this.data.length);\r\n  },\r\n  setupCell: function(inSender, inEvent) {\r\n    var index = inEvent.index;\r\n    var item = inEvent.item;\r\n    var datum = this.data[index];\r\n    item.$.cell.set(\"text\", datum.text);\r\n    item.$.cell.set(\"status\", datum.status);\r\n\r\n    /* stop propagation */\r\n    return true;\r\n  },\r\n});","var\r\n  kind = require(\"enyo/kind\");\r\n\r\nvar\r\n  Repeater = require(\"enyo/Repeater\"),\r\n  Cell = require(\"./Cell\"),\r\n  Control = require(\"enyo/Control\");\r\n\r\nmodule.exports = kind({\r\n  name: \"JottoWord\",\r\n  kind: Control,\r\n  components: [\r\n    { \r\n      name: \"cells\", \r\n      kind: Repeater,\r\n      onSetupItem: \"setupCell\",\r\n      components: [ \r\n        { \r\n          kind: Cell\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  //bindings: [\r\n  //  {\r\n  //    from: \"updateWord\", \r\n  //    to: \"$.gameStatusLabel.content\"\r\n  //  }\r\n  //],\r\n  computed: [\r\n    { \r\n      method: \"updateWord\", \r\n      path: [ \"word\" ] \r\n    }\r\n  ],\r\n  published: {\r\n    word: \"\"\r\n  },\r\n  create: function() {\r\n    this.inherited(arguments);\r\n    this.data = [];\r\n  },\r\n  rendered: function() {\r\n    this.inherited(arguments);\r\n    this.updateWord();\r\n  },\r\n  destroy: function() {\r\n    this.inherited(arguments);\r\n  },\r\n  updateWord: function() {\r\n    this.data = [];\r\n    var length = this.word.length || 0;\r\n    for (var i = 0; i < length; ++i) {\r\n      var letter = this.word.charAt(i);\r\n      var statusChar = \" \";\r\n      this.data.push({\"text\": letter, \"status\": statusChar});\r\n    }\r\n    this.$.cells.setCount(this.data.length);\r\n  },\r\n  setupCell: function(inSender, inEvent) {\r\n    var index = inEvent.index;\r\n    var item = inEvent.item;\r\n    var datum = this.data[index];\r\n    item.$.cell.set(\"text\", datum.text);\r\n    item.$.cell.set(\"status\", datum.status);\r\n\r\n    /* stop propagation */\r\n    return true;\r\n  },\r\n});","var\r\n  kind = require(\"enyo/kind\"),\r\n  job = require(\"enyo/job\"),\r\n  utils = require(\"enyo/utils\"),\r\n  Repeater = require(\"enyo/Repeater\"),\r\n  Signals = require(\"enyo/Signals\"),\r\n  Control = require(\"enyo/Control\"),\r\n  FittableColumns = require(\"layout/FittableColumns\"),\r\n  FittableRows = require(\"layout/FittableRows\"),\r\n  onyx = require(\"onyx\"),\r\n  Button = require(\"onyx/Button\");\r\n\r\nvar Unicode = {\r\n  nbsp: \"\\u00A0\",\r\n  mdash: \"\\u2014\",\r\n  leftwardArrow: \"\\u2190\",\r\n  upwardArrow: \"\\u2191\",\r\n  rightwardArrow: \"\\u2192\",\r\n  downwardArrow: \"\\u2193\"\r\n};\r\n\r\nvar backgroundColor = \"#053120\";\r\n\r\nmodule.exports = kind({\r\n  name: \"UIKeyboard\",\r\n  style: \"background-color: \" + backgroundColor,\r\n  components: [\r\n    { \r\n      kind: Signals,\r\n      onkeypress: \"handleKeyPress\",\r\n      onkeydown: \"handleKeyDown\"\r\n    },\r\n    {\r\n      kind: Control,\r\n      name: \"gameStatusLabel\",\r\n      content: \"Use on-screen keypad or computer keyboard\"\r\n    },\r\n    { \r\n      name: \"prompt\", \r\n      style: \"font-size: 30px; padding-bottom: 6px; text-align: center;\",\r\n      content: Unicode.nbsp\r\n    },\r\n    { \r\n      name: \"keyboard\", \r\n      components: [\r\n        {kind: FittableColumns, classes: \"enyo-center\", components: [\r\n          {kind: Button, name: \"A\", content: \"A\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"B\", content: \"B\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"C\", content: \"C\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"D\", content: \"D\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"E\", content: \"E\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"F\", content: \"F\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"}\r\n        ]},\r\n        {kind: FittableColumns, classes: \"enyo-center\", components: [\r\n          {kind: Button, name: \"G\", content: \"G\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"H\", content: \"H\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"I\", content: \"I\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"J\", content: \"J\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"K\", content: \"K\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"L\", content: \"L\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"}\r\n        ]},\r\n        {kind: FittableColumns, classes: \"enyo-center\", components: [\r\n          {kind: Button, name: \"M\", content: \"M\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"N\", content: \"N\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"O\", content: \"O\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"P\", content: \"P\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"Q\", content: \"Q\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"R\", content: \"R\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"}\r\n        ]},\r\n        {kind: FittableColumns, classes: \"enyo-center\", components: [\r\n          {kind: Button, name: \"S\", content: \"S\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"T\", content: \"T\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"U\", content: \"U\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"V\", content: \"V\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"W\", content: \"W\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"X\", content: \"X\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"}\r\n        ]},\r\n        {kind: FittableColumns, classes: \"enyo-center\", components: [\r\n          {kind: Button, name: \"Y\", content: \"Y\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"Z\", content: \"Z\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"Backspace\", content: Unicode.leftwardArrow, ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"Enter\", content: Unicode.rightwardArrow, ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"},\r\n          {kind: Button, name: \"Escape\",content: \"!\", ontap: \"tappedKeys\", style: \"margin: 3px 3px; width: 36px; font-size: 14px; padding: 6px 10px;\"}\r\n        ]}\r\n      ]\r\n    }\r\n  ],\r\n  published: {\r\n    guessLength: null\r\n  },\r\n  create: function() {\r\n    this.inherited(arguments);\r\n    this.guessData = [];\r\n    this.guessLength = 0;\r\n  },\r\n  destroy: function() {\r\n    this.inherited(arguments);\r\n  },\r\n  rendered: function() {\r\n    this.inherited(arguments);\r\n    this.refresh();\r\n  },\r\n  processKeypress(key) {\r\n    var ch = key;\r\n    if (ch == Unicode.leftwardArrow || ch == \"Backspace\") {\r\n      // allow backspace to clear a cell\r\n      if (this.guessData.length > 0) {\r\n        this.guessData.splice(this.guessData.length - 1, 1);\r\n        this.guess(null);\r\n      }\r\n    }\r\n    else if (ch == Unicode.rightwardArrow || ch == \"Enter\") {\r\n      // Enter key submits the guess\r\n      if (this.guessData.length > 0 && this.guessData.length == this.guessLength) {\r\n        var guessText = this.guessData.join(\"\");\r\n        this.submitGuess(guessText);\r\n      }\r\n    }\r\n    else if (ch == \"!\" || ch == \"Escape\") {\r\n      // Clear the guess data\r\n      this.clear();\r\n    }\r\n    else {\r\n      ch = ch.toUpperCase();\r\n      if (ch >= \"A\" && ch <= \"Z\") {\r\n        if (this.guessData.length < this.guessLength) {\r\n          this.guess(ch);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  highlightKey: function(key) {\r\n    var k = this.$[key];\r\n    if (k) {\r\n      var originalColor = \"#555656\";\r\n      k.addStyles(\"background-color: orange\");\r\n      job(\"resetColor\", utils.bindSafely(k, \"applyStyle\", \"background-color\", originalColor), 25);\r\n    }\r\n  },\r\n  clear: function() {\r\n    // Clear the guess data\r\n    if (this.guessData.length > 0) {\r\n      this.guessData = [];\r\n      this.$.prompt.setContent(Unicode.nbsp);\r\n      this.refresh();\r\n    }\r\n  },\r\n  setPrompt: function(guess) {\r\n    this.$.prompt.setContent(guess);\r\n    \r\n    var textColor = (guess.length == this.guessLength) ? \"orange\" : \"white\";\r\n    this.$.prompt.applyStyle(\"color\", textColor);\r\n  },\r\n  guess: function(key) {\r\n    if (null != key) {\r\n      this.guessData.push(key);\r\n    }\r\n    this.setPrompt(this.guessData.join(\"\"));\r\n  },\r\n  submitGuess: function(guessText) {\r\n    // Enter key submits the guess\r\n    Signals.send(\"onFinishGuess\", {\r\n      guess: guessText\r\n    });\r\n    this.clear();\r\n  },\r\n  handleKeyDown: function(inSender, inEvent) {\r\n    var doKeypress = false;\r\n    var ch = inEvent.key;\r\n    switch (inEvent.keyCode) {\r\n      case 8:\r\n      case 27:\r\n        doKeypress = true;\r\n        break;\r\n      default:\r\n        ch = ch.toUpperCase();\r\n    }\r\n\r\n    this.highlightKey(ch);\r\n    if (doKeypress) {\r\n      this.processKeypress(ch);\r\n    }\r\n\r\n    /* stop propagation */\r\n    return true;\r\n  },\r\n  handleKeyPress: function(inSender, inEvent) {\r\n    var ch = inEvent.key;\r\n    this.processKeypress(ch);\r\n\r\n    /* stop propagation */\r\n    return true;\r\n  },\r\n  tappedKeys: function(inSender, inEvent) {\r\n    var ch = inEvent.originator.content;\r\n    this.processKeypress(ch);\r\n\r\n    /* stop propagation */\r\n    return true;\r\n  }\r\n});","var\r\n  kind = require(\"enyo/kind\"),\r\n  EnyoImage = require(\"enyo/Image\"),\r\n  Control = require(\"enyo/Control\"),\r\n  FittableColumns = require(\"layout/FittableColumns\"),\r\n  FittableRows = require(\"layout/FittableRows\"),\r\n  Toolbar = require(\"onyx/Toolbar\"),\r\n  Button = require(\"onyx/Button\"),\r\n  Popup = require(\"onyx/Popup\");\r\n\r\nvar Unicode = {\r\n  nbsp: \"\\u00A0\",\r\n  mdash: \"\\u2014\",\r\n  leftwardArrow: \"\\u2190\",\r\n  upwardArrow: \"\\u2191\",\r\n  rightwardArrow: \"\\u2192\",\r\n  downwardArrow: \"\\u2193\"\r\n};\r\n\r\nmodule.exports = kind({\r\n  kind: Popup,\r\n  components: [\r\n    {\r\n      kind: FittableRows,\r\n      components: [\r\n        {\r\n          kind: Button,\r\n          content: \"Dismiss\",\r\n          ontap: \"dismissPopup\"\r\n        },\r\n        {\r\n          kind: Toolbar,\r\n          components: [\r\n            {\r\n              kind: EnyoImage,\r\n              /*style: \"width:165px; height:55px\",*/\r\n              src: \"assets/QuickHowTo.png\",\r\n              placeholder: EnyoImage.placeholder,\r\n              alt: \"Quick How To\"\r\n            }\r\n          ]\r\n        }      \r\n      ]\r\n    }\r\n  ],\r\n  create: function() {\r\n    this.inherited(arguments);\r\n  },\r\n  destroy: function() {\r\n    this.inherited(arguments);\r\n  },\r\n  rendered: function() {\r\n    this.inherited(arguments);\r\n  },\r\n  dismissPopup: function(inSender, inEvent) {\r\n    this.hide();\r\n    return true;\r\n  }\r\n});","/**\n  For simple applications, you might define all of your views in this file.\n  For more complex applications, you might choose to separate these kind of\n  definitions into multiple files under this folder and require() as needed.\n*/\n\nvar\n  kind = require(\"enyo/kind\"),\n  job = require(\"enyo/job\"),\n  Signals = require(\"enyo/Signals\"),\n  Repeater = require(\"enyo/Repeater\"),\n  WebService = require(\"enyo/WebService\"),\n  Scroller = require(\"enyo/Scroller\"),\n  EnyoImage = require(\"enyo/Image\"),\n  Control = require(\"enyo/Control\"),\n  FittableColumns = require(\"layout/FittableColumns\"),\n  FittableRows = require(\"layout/FittableRows\"),\n  Toolbar = require(\"onyx/Toolbar\"),\n  Button = require(\"onyx/Button\"),\n  ContextualPopup = require(\"onyx/ContextualPopup\"),\n  Popup = require(\"onyx/Popup\"),\n  Spinner = require(\"onyx/Spinner\"),\n  IntegerPicker = require(\"onyx/IntegerPicker\"),\n  PickerDecorator = require(\"onyx/PickerDecorator\"),\n  Tooltip = require(\"onyx/Tooltip\"),\n  TooltipDecorator = require(\"onyx/TooltipDecorator\");\n\nvar\n  JottoResult = require(\"../components/JottoResult\"),\n  JottoWord = require(\"../components/JottoWord\"),\n  UIKeyboard = require(\"../components/UIKeyboard\"),\n  HowToPlayPopup = require(\"../components/HowToPlayPopup\");\n\nvar Unicode = {\n  nbsp: \"\\u00A0\",\n  mdash: \"\\u2014\",\n  leftwardArrow: \"\\u2190\",\n  upwardArrow: \"\\u2191\",\n  rightwardArrow: \"\\u2192\",\n  downwardArrow: \"\\u2193\"\n};\n\nvar backgroundColor = \"#053120\";\n\nmodule.exports = kind({\n  kind: FittableRows,\n  components: [\n    {\n      kind: Signals,\n      onFinishGuess: \"finishGuess\"\n    },\n    {\n      kind: WebService,\n      name: \"newGameWebService\",\n      callbackName: \"callback\",\n      handleAs: \"json\",\n      onResponse: \"processGameServerResponse\",\n      onError: \"processError\",\n      url: \"${gameUrl}/api/game/jotto\",\n      method: \"POST\",\n      sync: false\n    },\n    {\n      kind: WebService,\n      name: \"newGuessWebService\",\n      callbackName: \"callback\",\n      handleAs: \"json\",\n      onResponse: \"processGameServerResponse\",\n      onError: \"processError\",\n      //url: \"${gameUrl}/api/game/jotto/guess/\",\n      method: \"PUT\",\n      sync: false\n    },\n    {\n      kind: Toolbar,\n      style: \"background-color: \" + backgroundColor,\n      components: [\n        {\n          kind: EnyoImage,\n          /** style: \"width:165px; height:55px\", */\n          src: \"assets/jotto_logo_small.png\",\n          placeholder: EnyoImage.placeholder,\n          alt: \"Jotto Logo\"\n        },\n        {\n          kind: TooltipDecorator, \n          components: [\n            {\n              kind: PickerDecorator,\n              components: [\n                {\n                  style: \"min-width: 60px; background-color: \" + backgroundColor\n                },\n                {\n                  kind: IntegerPicker,\n                  name: \"puzzleSizePicker\",\n                  style: \"color: white; background-color: \" + backgroundColor,\n                  min: 2,\n                  max: 12,\n                  value: 5\n                }\n              ]\n            },\n            {\n              kind: Tooltip, \n              content: \"Select length of mystery word\"\n            }\n          ]\n        },\n        {\n          kind: Button,\n          name: \"newGameButton\",\n          content: \"New Game\",\n          style: \"background-color: orange; color: black\",\n          ontap: \"newGame\"\n        },\n        {\n          kind: Button,\n          content: \"?\",\n          style: \"background-color: \" + backgroundColor,\n          ontap: \"showHowToPlayPopup\"\n        }\n      ]\n    },\n    {\n      kind: Toolbar,\n      style: \"background-color: \" + backgroundColor,\n      components: [\n        {\n          kind: Control,\n          name: \"gameStatusLabel\"\n        }\n      ]\n    },\n    {\n      kind: Scroller,\n      fit: true,\n      components: [\n        {\n          name: \"jottoWordItem\",\n          kind: FittableColumns,\n          components: [\n            {\n              name: \"jottoWordPadding\",\n              content: null,\n              style: \"padding: 5px 0\"\n            },\n            {\n              kind: JottoWord,\n              name: \"jottoWord\",\n              fit: true\n            }\n          ]\n        },\n        {\n          kind: Repeater,\n          name: \"guesses\",\n          count: 0,\n          onSetupItem: \"setupGuess\",\n          components: [\n            {\n              name: \"item\",\n              kind: FittableColumns,\n              components: [\n                {\n                  name: \"index\",\n                  content: null,\n                  style: \"padding: 5px 0\"\n                },\n                {\n                  kind: JottoResult,\n                  fit: true,\n                  result: \"***o.\",\n                  guess: \"jotox\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      kind: Toolbar,\n      style: \"background-color: \" + backgroundColor,\n      components: [\n        {\n          kind: UIKeyboard,\n          name: \"keyboardControl\"\n        },\n        {\n          kind: Popup,\n          name: \"popupGuessWarning\",\n          classes: \"popup\",\n          content: \"This guess has already been submitted!\",\n          style: \"background-color: red\"\n        }\n      ]\n    },\n    {\n      name: \"spinnerPopup\",\n      classes: \"onyx-sample-popup\",\n      kind: Popup,\n      centered: true,\n      modal: true,\n      floating: true,\n      onHide: \"popupHidden\",\n      scrim: true,\n      components: [\n        {\n          kind: Spinner\n        },\n        {\n          content: \"Contacting server...\"\n        }\n      ]\n    },\n    {\n      kind: ContextualPopup, \n      name: \"abortCurrentGamePopup\",\n      style: \"width:250px\", \n      title: \"Abort current game?\", \n      centered: true,\n      modal: true,\n      floating: true, \n      actionButtons: [\n        {\n          content: \"Yes\", \n          classes: \"onyx-button-warning\",\n          ontap: \"dismissConfirmationPopup\"\n        },\n        {\n          content: \"No\", \n          ontap: \"dismissConfirmationPopup\"\n        }\n      ]\n    },\n    {\n      kind: HowToPlayPopup,\n      classes: \"onyx-sample-popup\",\n      name: \"howToPlayPopup\",\n      floating: true,\n      modal: true,\n      centered: false\n    }\n  ],\n  bindings: [\n    {\n      from: \"updateGameStatus\",\n      to: \"$.gameStatusLabel.content\"\n    }\n  ],\n  computed: [\n    {\n      method: \"updateGameStatus\",\n      path: [ \"gameStatus\", \"guessesRemaining\" ]\n    },\n    {\n      method: \"updatePuzzleSolution\",\n      path: [ \"numLetters\", \"solution\" ]\n    }\n  ],\n  create: function() {\n    this.log(\"MainView::create()\");\n    this.inherited(arguments);\n    this.data = [];\n    this.guessHistory = null;\n    this.sessionToken = null;\n    this.guessesRemaining = 0;\n    this.numLetters = 0;\n    this.gameStatus = 0;\n    this.solution = \"\";\n  },\n  destroy: function() {\n    this.log(\"MainView::destroy()\");\n    this.inherited(arguments);\n  },\n  rendered: function() {\n    this.log(\"MainView::rendered()\");\n    this.inherited(arguments);\n    this.$.guesses.setCount((this.data || []).length);\n  },\n  clearGuessHistory: function() {\n    this.guessHistory = {};\n  },\n  updateGameStatus: function() {\n    var statusDescription = \"\";\n    switch (this.gameStatus) {\n      case 0:\n        statusDescription = \">>> Click [New Game] to start <<<\";\n        break;\n      case 1:\n        statusDescription = \"Guesses remaining: \" + this.guessesRemaining;\n        break;\n      case 2:\n        statusDescription = \"*** Kudos! You won in \" + this.data.length + \" guesses. ***\";\n        break;\n      case 3:\n        statusDescription = \"*** Sorry! You lost. ***\";\n        break;\n    }\n    return statusDescription;\n  },\n  updatePuzzleSolution: function() {\n    var length = (String.valueOf(this.data.length)).length;\n    var newContent = \">\".repeat(length + 1) + Unicode.nbsp;\n    this.$.jottoWordPadding.set(\"content\", newContent);\n    this.$.jottoWord.set(\"word\", this.solution);\n  },\n  hideSpinnerPopup: function() {\n    var p = this.$.spinnerPopup;\n    if (p) {\n      p.hide();\n    }\n  },\n  popupHidden: function() {\n    //document.activeElement.blur();\n  },\n  showSpinnerPopup: function() {\n    var p = this.$.spinnerPopup;\n    if (p) {\n      p.show();\n    }\n  },\n  showHowToPlayPopup: function() {\n    var p = this.$.howToPlayPopup;\n    if (p) {\n      p.show();\n    }\n  },\n  dismissConfirmationPopup: function(inSender, inEvent) {\n    inSender.popup.hide();\n    \n    var abortCurrentGame = (inSender.content == \"Yes\");\n    if (abortCurrentGame) {\n      this.startNewGame();\n    }\n\n    /* stop propagation */\n    return true;\n  },\n  showAbortCurrentGamePopup: function() {\n    var p = this.$.abortCurrentGamePopup;\n    if (p) {\n      p.show();\n    }\n  },\n  invokeNewGameWebService: function(numLetters) {\n    this.log(\"invokeNewGameWebService: \" + numLetters);\n    var indexOfQuote = this.$.newGameWebService.url.lastIndexOf(\"?\");\n    var url = (indexOfQuote >= 0) ? this.$.newGameWebService.url.substring(0, indexOfQuote) : this.$.newGameWebService.url;\n    url = url + \"?letters=\" + numLetters;\n    this.$.newGameWebService.url = url;\n    this.$.newGameWebService.send({});\n    this.showSpinnerPopup();\n  },\n  invokeNewGuessWebService: function(guessText) {\n    this.log(\"invokeNewGuessWebService: \" + guessText);\n    var indexOfSlash = this.$.newGuessWebService.url.lastIndexOf(\"/\");\n    var url = (indexOfSlash >= 0) ? this.$.newGuessWebService.url.substring(0, indexOfSlash) : this.$.newGuessWebService.url;\n    this.$.newGuessWebService.url = url + \"/\" + guessText;\n    this.$.newGuessWebService.set(\"headers\", {\"x-session\": this.sessionToken});\n    this.$.newGuessWebService.send({});\n    this.guessHistory[guessText] = guessText;\n    this.showSpinnerPopup();\n  },\n  finishGuess: function(inSender, inEvent) {\n    var guessText = inEvent.guess;\n    this.log(\"finishGuess: \" + guessText);\n    if (null == this.guessHistory[guessText]) {\n      this.invokeNewGuessWebService(guessText);\n    }\n    else {\n      this.showPopupGuessWarning();\n    }\n\n    /* stop propagation */\n    return true;\n  },\n  startNewGame: function() {\n    var numLetters = this.$.puzzleSizePicker.selected.content;\n    this.invokeNewGameWebService(numLetters);\n  },\n  setupGuess: function(inSender, inEvent) {\n    this.log(\"setupGuess...\");\n    var index = inEvent.index;\n    var item = inEvent.item;\n    var datum = this.data[index];\n    item.$.jottoResult.set(\"guess\", datum.guess);\n    item.$.jottoResult.set(\"result\", datum.result);\n\n    var newIndex = \"\" + (this.data.length - index);\n    var newContent = Unicode.nbsp.repeat(2 - newIndex.length) + newIndex + \":\" + Unicode.nbsp;\n    item.$.index.setContent(newContent);\n\n    /* stop propagation */\n    return true;\n  },\n  newGame: function(inSender, inEvent) {\n    this.log(\"newGame click...\");\n    \n    var gameStatus = this.get(\"gameStatus\");\n    if (gameStatus != 1) {\n      this.startNewGame();\n    }\n    else {\n      this.showAbortCurrentGamePopup();\n    }\n\n    inSender.blur();\n\n    /* stop propagation */\n    return true;\n  },\n  processGameServerResponse: function(inSender, inEvent) {\n    this.hideSpinnerPopup();\n    //this.sessionToken = inEvent.ajax.xhrResponse.headers[\"x-session\"];\n\n    // do something with it\n    //var data = JSON.stringify(inEvent.data[0], null, 2);\n    var data = inEvent.data;\n    var stats = data.stats || {};\n    var turnsTakenList = data[\"turnsTaken\"];\n    var turnCount = turnsTakenList.length;\n\n    this.set(\"sessionToken\", data[\"token\"]);\n    this.set(\"guessesRemaining\", stats.turnsRemaining || 0);\n    this.set(\"numLetters\", stats.puzzleLength);\n    this.set(\"gameStatus\", 1);\n    this.set(\"solution\", \"?\".repeat(this.numLetters));\n    this.set(\"data\", []);\n\n    if (turnCount < 1) {\n      // New game\n      this.clearGuessHistory();\n      this.$.keyboardControl.set(\"guessLength\", this.numLetters);\n    }\n\n    for (var i = 0; i < turnCount; ++i) {\n      var item = turnsTakenList[i];\n      var guess = item.guess;\n      var result = item.result;\n      var entry = {guess: guess, result: result};\n      this.data.splice(0, 0, entry); // prepend a new entry\n    }\n\n    this.$.guesses.setCount(this.data.length);\n\n    var isGameOver = stats.gameOver || false;\n    var isVictory = stats.victory || false;\n    if (isGameOver) {\n      var puzzleWord = stats.puzzleWord;\n      var gameStatus = (isVictory) ? 2 : 3;\n      this.set(\"solution\", puzzleWord);\n      this.set(\"gameStatus\", gameStatus);\n      this.$.keyboardControl.clear();\n      this.$.keyboardControl.set(\"guessLength\", 0);\n    }\n\n    /* stop propagation */\n    return true;\n  },\n  processError: function(inSender, inEvent) {\n    this.hideSpinnerPopup();\n    var errorResponse = JSON.stringify(inEvent.ajax.xhrResponse, null, 2);\n    var xhrBody = (inEvent.ajax.xhrResponse.body.length > 0) ? (JSON.parse(inEvent.ajax.xhrResponse.body)) : null;\n    var code = (xhrBody) ? xhrBody.code : 500;\n    var errorDescription = (xhrBody) ? xhrBody.detailedMessage : \"\";\n    var errorLog = \"Error (\" + code + \"): \" + inEvent.data + \"! \" + errorDescription;\n    this.log(errorLog);\n  },\n  showPopupGuessWarning: function(inSender, inEvent) {\n    var p = this.$.popupGuessWarning;\n    if (p) {\n      p.setShowing(true);\n      job(\"autoHidePopup\", function() {\n        p.hide();\n      }, 2000);\n    }\n\n    /* stop propagation */\n    return true;\n  }\n});\n","/**\n  Define your enyo/Application kind in this file.\n*/\n\nvar\n  kind = require('enyo/kind'),\n  Application = require('enyo/Application'),\n  MainView = require('./views/MainView');\n\nmodule.exports = kind({\n  kind: Application,\n  view: MainView\n});\n","/**\n  Instantiate your enyo/Application kind in this file.  Note, application\n  rendering should be deferred until the DOM is ready by wrapping it in a\n  call to ready().\n*/\n\nvar\n  ready = require('enyo/ready'),\n  App = require('./src/App');\n\nready(function () {\n  new App();\n});\n"]}